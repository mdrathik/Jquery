/*validete form box*/$(document).ready(function() {    $('#characterLeft').text('You can  input  140 Charecters');    $('#message').keydown(function() {        /*here keydown is count by single input an                           and keyup is count by force input system */        var max = 140;        var len = $(this).val().length;        if (len >= max) {            $('#characterLeft').text('You have reach the limit');            $("#submit").addClass("disabled");        } else {            var result = max - len;            $('#submit').removeClass('disabled');            $('#characterLeft').text(result + ' Charecters left');        }    });    /*validete form box end*/    loadData(); //data load from php    /*ajax autoComplete data*/    $("#mobile").keyup(function() {        var mobile = $(this).val();        var len = $(this).val().length;        if (mobile == '') {            $('#status').show();            $('#mobileStatus').hide();            $('#status').html("Please input Data");        } else if (mobile != '') {            $.ajax({                url: 'suggest.php',                method: "POST",                data: {                    mobile: mobile                },                success: function(data) {                    $('#status').hide();                    $('#mobileStatus').fadeIn();                    $('#mobileStatus').html(data);                }            });        }        $(document).on('click', 'li', function() {            $('#mobile').val($(this).text());            $('#mobileStatus').fadeOut();        });    });    /*ajax autoComplete data end*/});/*insert data*/$(document).on('click', '#submit', function(e) {    e.preventDefault();    var data = $("#formdata").serialize();    $.ajax({        url: 'insert.php',        method: "POST",        data: data,        success: function(data) {            $('#formdata').trigger("reset");            $('#alert').addClass("alert alert-success").text(data).fadeIn().fadeOut(2000);            loadData();        }    });});/*end data insert data*/$(document).ready(function() {    var i = 0;    $('#addmore').click(function() {        i++;        $('#mainDiv').append('<div id="row' + i + '" class="form-group"><label class="col-md-4 control-label" for="giftID">Name</label>  <div class="col-md-4"><input class="form-control input-md" type="text" name="name[]"></div><button id="' + i + '"  type="button" class="btn_remove btn btn-danger"><span class="glyphicon glyphicon-trash"></span></button>');    });    $(document).on('click', '.btn_remove', function() {        var button_id = $(this).attr("id");        $('#row' + button_id + '').remove();    });    $(document).on('click','#multipledata',function(){           var arraydata = $("#add_name").serialize();           $.ajax({            url : 'minsert.php',            method: 'POST',            data:arraydata,            success:function(data){              alert(data);            }           });    });});//show datafunction loadData() {    $.ajax({        url: 'show.php',        method: "POST",        success: function(data) {            $('#tabledata').html(data);        }    });}$(document).on('click', '#delete', function(e) {    var DeleteValue = $(this).val();    $.ajax({        url: 'delete.php',        method: "POST",        data: {            id: DeleteValue        },        success: function(data) {            loadData();        }    });});//end show data/*search data*//*Please consider that the JS part isn't production ready at all, I just code it to show the concept of merging filters and titles together !*/$(document).ready(function() {    $('.filterable .btn-filter').click(function() {        var $panel = $(this).parents('.filterable'),            $filters = $panel.find('.filters input'),            $tbody = $panel.find('.table tbody');        if ($filters.prop('disabled') == true) {            $filters.prop('disabled', false);            $filters.first().focus();        } else {            $filters.val('').prop('disabled', true);            $tbody.find('.no-result').remove();            $tbody.find('tr').show();        }    });    $('.filterable .filters input').keyup(function(e) {        /* Ignore tab key */        var code = e.keyCode || e.which;        if (code == '9') return;        /* Useful DOM data and selectors */        var $input = $(this),            inputContent = $input.val().toLowerCase(),            $panel = $input.parents('.filterable'),            column = $panel.find('.filters th').index($input.parents('th')),            $table = $panel.find('.table'),            $rows = $table.find('tbody tr');        /* Dirtiest filter function ever ;) */        var $filteredRows = $rows.filter(function() {            var value = $(this).find('td').eq(column).text().toLowerCase();            return value.indexOf(inputContent) === -1;        });        /* Clean previous no-result if exist */        $table.find('tbody .no-result').remove();        /* Show all rows, hide filtered ones (never do that outside of a demo ! xD) */        $rows.show();        $filteredRows.hide();        /* Prepend no-result row if all rows are filtered */        if ($filteredRows.length === $rows.length) {            $table.find('tbody').prepend($('<tr class="no-result text-center"><td colspan="' + $table.find('.filters th').length + '">No result found</td></tr>'));        }    });});/*end search data*/